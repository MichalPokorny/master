# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: training_samples.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='training_samples.proto',
  package='prvak',
  serialized_pb=_b('\n\x16training_samples.proto\x12\x05prvak\"K\n\x0fTrainingSamples\x12\x38\n\x10relation_samples\x18\x01 \x03(\x0b\x32\x1e.prvak.RelationTrainingSamples\"\\\n\x17RelationTrainingSamples\x12\x10\n\x08relation\x18\x01 \x01(\t\x12/\n\x10positive_samples\x18\x02 \x03(\x0b\x32\x15.prvak.TrainingSample\"\xa5\x01\n\x0eTrainingSample\x12\x10\n\x08relation\x18\x01 \x01(\t\x12\n\n\x02\x65\x31\x18\x02 \x01(\t\x12\n\n\x02\x65\x32\x18\x03 \x01(\t\x12\x35\n\x08sentence\x18\x04 \x01(\x0b\x32#.prvak.TrainingSampleParsedSentence\x12\x18\n\x10\x65\x31_token_indices\x18\x05 \x03(\x05\x12\x18\n\x10\x65\x32_token_indices\x18\x06 \x03(\x05\"p\n\x1bTrainingSampleSentenceToken\x12\x14\n\x0cstart_offset\x18\x01 \x01(\x05\x12\x12\n\nend_offset\x18\x02 \x01(\x05\x12\r\n\x05lemma\x18\x03 \x01(\t\x12\x0b\n\x03pos\x18\x04 \x01(\t\x12\x0b\n\x03ner\x18\x05 \x01(\t\"`\n\x1cTrainingSampleParsedSentence\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x32\n\x06tokens\x18\x02 \x03(\x0b\x32\".prvak.TrainingSampleSentenceToken')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_TRAININGSAMPLES = _descriptor.Descriptor(
  name='TrainingSamples',
  full_name='prvak.TrainingSamples',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='relation_samples', full_name='prvak.TrainingSamples.relation_samples', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=108,
)


_RELATIONTRAININGSAMPLES = _descriptor.Descriptor(
  name='RelationTrainingSamples',
  full_name='prvak.RelationTrainingSamples',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='relation', full_name='prvak.RelationTrainingSamples.relation', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='positive_samples', full_name='prvak.RelationTrainingSamples.positive_samples', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=202,
)


_TRAININGSAMPLE = _descriptor.Descriptor(
  name='TrainingSample',
  full_name='prvak.TrainingSample',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='relation', full_name='prvak.TrainingSample.relation', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='e1', full_name='prvak.TrainingSample.e1', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='e2', full_name='prvak.TrainingSample.e2', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sentence', full_name='prvak.TrainingSample.sentence', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='e1_token_indices', full_name='prvak.TrainingSample.e1_token_indices', index=4,
      number=5, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='e2_token_indices', full_name='prvak.TrainingSample.e2_token_indices', index=5,
      number=6, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=205,
  serialized_end=370,
)


_TRAININGSAMPLESENTENCETOKEN = _descriptor.Descriptor(
  name='TrainingSampleSentenceToken',
  full_name='prvak.TrainingSampleSentenceToken',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_offset', full_name='prvak.TrainingSampleSentenceToken.start_offset', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_offset', full_name='prvak.TrainingSampleSentenceToken.end_offset', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lemma', full_name='prvak.TrainingSampleSentenceToken.lemma', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pos', full_name='prvak.TrainingSampleSentenceToken.pos', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ner', full_name='prvak.TrainingSampleSentenceToken.ner', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=372,
  serialized_end=484,
)


_TRAININGSAMPLEPARSEDSENTENCE = _descriptor.Descriptor(
  name='TrainingSampleParsedSentence',
  full_name='prvak.TrainingSampleParsedSentence',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='prvak.TrainingSampleParsedSentence.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tokens', full_name='prvak.TrainingSampleParsedSentence.tokens', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=486,
  serialized_end=582,
)

_TRAININGSAMPLES.fields_by_name['relation_samples'].message_type = _RELATIONTRAININGSAMPLES
_RELATIONTRAININGSAMPLES.fields_by_name['positive_samples'].message_type = _TRAININGSAMPLE
_TRAININGSAMPLE.fields_by_name['sentence'].message_type = _TRAININGSAMPLEPARSEDSENTENCE
_TRAININGSAMPLEPARSEDSENTENCE.fields_by_name['tokens'].message_type = _TRAININGSAMPLESENTENCETOKEN
DESCRIPTOR.message_types_by_name['TrainingSamples'] = _TRAININGSAMPLES
DESCRIPTOR.message_types_by_name['RelationTrainingSamples'] = _RELATIONTRAININGSAMPLES
DESCRIPTOR.message_types_by_name['TrainingSample'] = _TRAININGSAMPLE
DESCRIPTOR.message_types_by_name['TrainingSampleSentenceToken'] = _TRAININGSAMPLESENTENCETOKEN
DESCRIPTOR.message_types_by_name['TrainingSampleParsedSentence'] = _TRAININGSAMPLEPARSEDSENTENCE

TrainingSamples = _reflection.GeneratedProtocolMessageType('TrainingSamples', (_message.Message,), dict(
  DESCRIPTOR = _TRAININGSAMPLES,
  __module__ = 'training_samples_pb2'
  # @@protoc_insertion_point(class_scope:prvak.TrainingSamples)
  ))
_sym_db.RegisterMessage(TrainingSamples)

RelationTrainingSamples = _reflection.GeneratedProtocolMessageType('RelationTrainingSamples', (_message.Message,), dict(
  DESCRIPTOR = _RELATIONTRAININGSAMPLES,
  __module__ = 'training_samples_pb2'
  # @@protoc_insertion_point(class_scope:prvak.RelationTrainingSamples)
  ))
_sym_db.RegisterMessage(RelationTrainingSamples)

TrainingSample = _reflection.GeneratedProtocolMessageType('TrainingSample', (_message.Message,), dict(
  DESCRIPTOR = _TRAININGSAMPLE,
  __module__ = 'training_samples_pb2'
  # @@protoc_insertion_point(class_scope:prvak.TrainingSample)
  ))
_sym_db.RegisterMessage(TrainingSample)

TrainingSampleSentenceToken = _reflection.GeneratedProtocolMessageType('TrainingSampleSentenceToken', (_message.Message,), dict(
  DESCRIPTOR = _TRAININGSAMPLESENTENCETOKEN,
  __module__ = 'training_samples_pb2'
  # @@protoc_insertion_point(class_scope:prvak.TrainingSampleSentenceToken)
  ))
_sym_db.RegisterMessage(TrainingSampleSentenceToken)

TrainingSampleParsedSentence = _reflection.GeneratedProtocolMessageType('TrainingSampleParsedSentence', (_message.Message,), dict(
  DESCRIPTOR = _TRAININGSAMPLEPARSEDSENTENCE,
  __module__ = 'training_samples_pb2'
  # @@protoc_insertion_point(class_scope:prvak.TrainingSampleParsedSentence)
  ))
_sym_db.RegisterMessage(TrainingSampleParsedSentence)


# @@protoc_insertion_point(module_scope)
